package testi;

import java.io.IOException;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.BorderPane;
import javafx.stage.Stage;
import simu.framework.Kello;
import simu.framework.Moottori;
import simu.framework.Trace;
import simu.framework.Trace.Level;
import simu.model.OmaMoottori;
import simu.view.SimulaattoriMainWindowController;
import simu.view.TestipitsController;

public class VisuaalinenSimulaattori extends Application {
	
	private BorderPane rootLayout;
	private Stage primaryStage;
	Moottori m = null;

	@Override
	public void start(Stage primaryStage) {
		this.primaryStage = primaryStage;
		initRootLayout();
	}
	
	public void initRootLayout() {
	    try {
	        // Load person overview.
	        FXMLLoader loader = new FXMLLoader();
	        loader.setLocation(VisuaalinenSimulaattori.class.getResource("../simu/view/SimulaattoriMainWindow.fxml"));
	        rootLayout = (BorderPane) loader.load();
	        
	        Scene scene = new Scene(rootLayout);
	        primaryStage.setScene(scene);

	        // Give the controller access to the main app.
	        SimulaattoriMainWindowController controller = loader.getController();
	        controller.setSimulaattori(this);
	        
	        primaryStage.show();

	    } catch (IOException e) {
	        e.printStackTrace();
	    }
	}

	public static void main(String[] args) {
		launch(args);
	}
	
	public void kaynnistaSimulaatio(int m1, int m2, int m3, int m4, int m5, int m6, SimulaattoriMainWindowController controller) {
		//m1 = korjaamon avaamis aika
		//m2 = korjaamon sulkemis aika
		//m3 = simuloitavien päivien määrä
		//m4 = simulaattorin viiveen määrä
		//m5 = korjaamon korjauspisteiden määrä
		//m6 = korjaamon työntekijöiden määrä
		Trace.setTraceLevel(Level.INFO);
		m = new OmaMoottori();
		
		Kello.getInstance().setAvaamisAika(m1);
		Kello.getInstance().setSulkemisAika(m2);
		Kello.getInstance().setPaivat(m3);
		
		m.setViive(m4);
		m.setController(controller);
		
		//Plussataan palvelupisteisiin yksi koska tiski
		m.setPalvelupisteet(m5+1);
		m.setTyontekijat(m6);
		m.start();
	}
	
	public void pauseS() {
		m.pauseSimulaatio();
	}
	public void continueS() {
		m.continueSimulaatio();
	}
	public void stopS() {
		m.stopSimulaatio();
	}
}
